{"version":3,"file":"static/js/307.b9388d83.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://react-homework-template/./src/shared/components/TextField/text-field.module.scss?a1c3","shared/components/TextField/TextField.jsx","webpack://react-homework-template/./src/shared/components/Button/button.module.scss?9580","shared/components/Button/Button.jsx","webpack://react-homework-template/./src/shared/components/Card/card.module.scss?c317","shared/components/Card/Card.jsx","shared/hooks/useForm.js","modules/RegisterForm/fields.js","modules/RegisterForm/initialState.js","webpack://react-homework-template/./src/modules/RegisterForm/register-form.module.scss?522d","modules/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"text-field_container__O+zbj\",\"label\":\"text-field_label__49yKV\",\"input\":\"text-field_input__8dG8E\"};","import {useMemo} from 'react';\nimport {nanoid} from 'nanoid';\n\nimport styles from './text-field.module.scss';\n\nconst TextField = ({label, handleChange, ...props}) => {\n    const id = useMemo(()=> nanoid(), []);\n\n    return (\n        <div className={styles.container}>\n            <label className={styles.label} htmlFor={id}>{label}</label>\n            <input className={styles.input} id={id} onChange={handleChange} {...props} />\n        </div>\n    );\n}\n\nexport default TextField;","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"button_button__vTaVn\"};","import styles from './button.module.scss';\n\nconst Button = ({className, disabled, type, onClick, children}) => {\n    return (\n        <button\n            type={type || 'button'}\n            className={`${styles.button} ${className}`}\n            onClick={onClick}\n            disabled={disabled}\n        >\n            {children}\n        </button>\n    );\n};\n\nexport default Button;","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"card_card__L6k2k\"};","import styles from './card.module.scss';\n\nconst Card = ({className, children}) => {\n    const classes = `${styles.card} ${className}`;\n    return (\n        <div className={classes}>\n            {children}\n        </div>\n    )\n}\n\nexport default Card;","import { useState, useCallback } from \"react\";\n\nconst useForm = ({initialState, onSubmit})=> {\n    const [state, setState] = useState({...initialState})\n\n    const handleChange = useCallback(({target}) => {\n        const {name, value} = target;\n        setState(prevState => {\n            return {...prevState, [name]: value}\n        })\n    }, [setState]);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        onSubmit({...state});\n        setState({...initialState});\n    };\n\n    return {state, setState, handleChange, handleSubmit}\n}\n\nexport default useForm;","const fields = {\n    name: {\n        type: \"text\",\n        name: \"name\",\n        required: true,\n        label: \"Name\",\n        placeholder: \"\",\n    },\n    email: {\n        type: \"email\",\n        name: \"email\",\n        required: true,\n        label: \"Email\",\n        placeholder: \"\",\n    },\n    password: {\n        type: \"password\",\n        name: \"password\",\n        required: true,\n        label: \"Password\",\n        placeholder: \"\",\n    },\n};\n\nexport default fields;","const initialState = {\n    name: \"\",\n    email: \"\",\n    password: \"\"\n}\n\nexport default initialState;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"register-form_form__uF+WC\",\"card\":\"register-form_card__9gwzv\",\"button\":\"register-form_button__VxHe+\"};","import TextField from \"../../shared/components/TextField/TextField\";\nimport Button from \"../../shared/components/Button/Button\";\nimport Card from '../../shared/components/Card/Card';\n\nimport useForm from '../../shared/hooks/useForm';\nimport fields from './fields';\nimport initialState from \"./initialState\";\nimport styles from './register-form.module.scss';\n\nconst RegisterForm = ({onSubmit}) => {\n    const {state, handleChange, handleSubmit} = useForm({initialState, onSubmit});\n    const {name, email, password} = state;\n\n    return (\n        <Card className={styles.card}>\n            <form onSubmit={handleSubmit} className={styles.form}>\n                <TextField value={name} handleChange={handleChange} {...fields.name} />\n                <TextField value={email} handleChange={handleChange} {...fields.email} />\n                <TextField value={password} handleChange={handleChange} {...fields.password} />\n                <Button className={styles.button} type=\"button\" disabled={false}>Register</Button>\n            </form>\n        </Card>\n    );\n};\n\nexport default RegisterForm;","import RegisterForm from '../../modules/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n    const onSubmit = () => {\n        \n    }\n    return (\n        <RegisterForm onSubmit={onSubmit} />\n    )\n}\n\nexport default RegisterPage;","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","label","handleChange","props","id","useMemo","nanoid","className","styles","htmlFor","onChange","disabled","type","onClick","children","classes","initialState","onSubmit","useState","state","setState","useCallback","name","value","prevState","handleSubmit","e","preventDefault","required","placeholder","email","password","useForm","fields","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}