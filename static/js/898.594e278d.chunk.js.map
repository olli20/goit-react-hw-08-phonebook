{"version":3,"file":"static/js/898.594e278d.chunk.js","mappings":"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","sources":["modules/ContactForm/fields.js","modules/ContactForm/initialState.js","webpack://react-homework-template/./src/modules/ContactForm/contact-form.module.scss?07fc","modules/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/modules/Filter/filter.module.scss?f50b","modules/Filter/Filter.jsx","webpack://react-homework-template/./src/modules/ContactList/contact-list.module.scss?81aa","modules/ContactList/ContactListItem.jsx","modules/ContactList/ContactList.jsx","redux/contacts/contacts-selectors.js","redux/filter/filter-selectors.js","webpack://react-homework-template/./src/pages/ContactsPage/contacts-page.module.scss?b2d2","pages/ContactsPage/ContactsPage.jsx","webpack://react-homework-template/./src/shared/components/Button/button.module.scss?9580","shared/components/Button/Button.jsx","webpack://react-homework-template/./src/shared/components/Card/card.module.scss?c317","shared/components/Card/Card.jsx","webpack://react-homework-template/./src/shared/components/TextField/text-field.module.scss?a1c3","shared/components/TextField/TextField.jsx"],"sourcesContent":["const fields = {\n  name: {\n    type: 'text',\n    name: 'name',\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n    required: true,\n    label: 'Name',\n    placeholder: '',\n  },\n  number: {\n    type: 'text',\n    name: 'number',\n    pattern: '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{0,4}[-.s]?d{0,4}[-.s]?d{1,9}',\n    title:\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n    required: true,\n    label: 'Number',\n    placeholder: '',\n  },\n};\n\nexport default fields;\n","const initialState = {\n    name: \"\",\n    number: \"\",\n}\n\nexport default initialState;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"contact-form_form__f7EO7\",\"card\":\"contact-form_card__rYrfl\",\"button\":\"contact-form_button__63jxu\",\"inputBlock\":\"contact-form_inputBlock__vNLVg\",\"name\":\"contact-form_name__BfFvo\",\"input\":\"contact-form_input__jaYgM\"};","import {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Card from 'shared/components/Card/Card';\nimport TextField from 'shared/components/TextField/TextField';\nimport Button from 'shared/components/Button/Button';\n\nimport fields from './fields';\nimport initialState from './initialState';\n\nimport styles from './contact-form.module.scss';\n\nconst ContactForm = ({onSubmit, contacts}) => {\n    const [state, setState] = useState({ ...initialState });\n    \n    const handleChange = ({target}) => {\n        const {name, value} = target;\n        setState(prevState => ({...prevState, [name]: value}));\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        const isNameAlreadyHere = contacts.filter(contact => contact.name.toLowerCase() === name.toLowerCase()).length;\n        if(isNameAlreadyHere){\n           return alert(`${name} is already in contacts`);\n        };\n\n        onSubmit({name, number});\n        setState({...initialState});\n    }\n    \n    const {name, number} = state;\n\n    return (\n        <Card className={styles.card}>\n            <form onSubmit={handleSubmit} className={styles.form}>\n                <TextField value={name} handleChange={handleChange} {...fields.name} />\n                <TextField value={number} handleChange={handleChange} {...fields.number} />\n                <Button type=\"submit\" className={styles.button}>Add contact</Button>\n            </form>\n        </Card>\n    )\n}\n\nexport default ContactForm;\n\nContactForm.defaultProps = {\n    contacts: [],\n}\n\nContactForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    })).isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"filter_filter__53wF1\"};","import PropTypes from 'prop-types';\n\nimport TextField from 'shared/components/TextField/TextField';\n\nimport styles from './filter.module.scss';\n\nconst Filter = ({filter, changeFilter}) => {\n    return (\n        <div className={styles.filter}>\n            <TextField value={filter} handleChange={changeFilter} label=\"Find contacts by name\" />\n        </div>\n    )\n}\n\nexport default Filter;\n\nFilter.propTypes = {\n    filter: PropTypes.string.isRequired,\n    changeFilter: PropTypes.func.isRequired,\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contact-list_list__inua9\",\"listItem\":\"contact-list_listItem__Gpmai\",\"btn\":\"contact-list_btn__gWG8c\"};","import PropTypes from 'prop-types';\n\nimport { HiXMark } from \"react-icons/hi2\";\n\nimport styles from './contact-list.module.scss';\n\nconst ContactListItem = ({id, name, number, onRemoveContact}) => {\n    return (\n        <li className={styles.listItem}>\n            <span>{name}: </span><span>{number}</span>\n            <button onClick={() => onRemoveContact(id)} type=\"button\" className={styles.btn}>\n                <HiXMark />\n            </button>\n        </li>\n    );\n}\n\nexport default ContactListItem;\n\nContactListItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onRemoveContact: PropTypes.func.isRequired,\n}","import PropTypes from 'prop-types';\n\nimport ContactListItem from './ContactListItem';\n\nimport styles from './contact-list.module.scss';\n\nconst ContactList = ({contacts = [], onRemoveContact}) => {\n    const elements = contacts.map(({id, name, number}) => {\n        return <ContactListItem key={id} id={id} name={name} number={number} onRemoveContact={onRemoveContact}/>;\n    });\n\n    return (\n        <ul className={styles.list}>\n            {elements}\n        </ul>\n    );\n}\n\nexport default ContactList;\n\nContactListItem.defaultProps = {\n    contacts: [],\n}\n\nContactListItem.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    })).isRequired,\n    onRemoveContact: PropTypes.func.isRequired,\n}","export const getAllContacts = ({contacts}) => contacts.items;\nexport const getError = ({contacts}) => contacts.error;\nexport const getLoading = ({contacts}) => contacts.loading;\n\nexport const getFilteredContacts = ({contacts, filter}) => {\n    if (!filter) {\n        return contacts.items;\n    }\n    const normalizedFilter = filter.toLowerCase();\n    const result = contacts.items.filter(({ name }) => {\n        return (name.toLowerCase().includes(normalizedFilter))\n    })\n    return result;\n}","export const getFilter = ({filter}) => filter;","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"contacts-page_main__P1mdV\",\"contacts\":\"contacts-page_contacts__XgEx1\",\"title\":\"contacts-page_title__daPAH\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport ContactForm from '../../modules/ContactForm';\nimport Filter from '../../modules/Filter';\nimport ContactList from '../../modules/ContactList';\nimport Card from 'shared/components/Card/Card';\n\nimport { fetchAllContacts, fetchAddContact, fetchDeleteContact } from '../../redux/contacts/contacts-operations';\nimport { setFilter } from '../../redux/filter/filter-slice';\nimport { getAllContacts, getFilteredContacts, getLoading, getError } from '../../redux/contacts/contacts-selectors';\nimport { getFilter } from '../../redux/filter/filter-selectors';\n\nimport styles from './contacts-page.module.scss';\n\nconst ContactsPage = () => {\n  const contacts = useSelector(getAllContacts);\n  const loading = useSelector(getLoading);\n  const error = useSelector(getError);\n  const filteredContacts = useSelector(getFilteredContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const submitHandler = ({ name, number }) => {\n    dispatch(fetchAddContact({ name, number }));\n  };\n\n  const removeHandler = id => {\n    dispatch(fetchDeleteContact(id));\n  };\n\n  const filterHandler = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  const isItems = filteredContacts?.length > 0;\n  const noContacts = contacts?.length > 0;\n  \n  return (\n    <main className={styles.main}>\n      <Card className={styles.contacts}>\n        <h1 className={styles.title}>Your contacts</h1>\n        <Filter filter={filter} changeFilter={filterHandler} />\n        {isItems && <ContactList contacts={filteredContacts} onRemoveContact={removeHandler} />}\n        {!noContacts && <p>You have no added contacts jet</p>}\n        {loading && <p>Loading...</p>}\n        {Boolean(error) && <p>{error}</p>}\n      </Card>\n      \n      <ContactForm onSubmit={submitHandler} contacts={contacts} />\n    </main>\n  );\n}\n\nexport default ContactsPage;","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"button_button__vTaVn\"};","import styles from './button.module.scss';\n\nconst Button = ({className, disabled, type, onClick, children}) => {\n    return (\n        <button\n            type={type || 'button'}\n            className={`${className} ${styles.button}`}\n            onClick={onClick}\n            disabled={disabled}\n        >\n            {children}\n        </button>\n\n    );\n};\n\nexport default Button;","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"card_card__L6k2k\"};","import styles from './card.module.scss';\n\nconst Card = ({className, children}) => {\n    const classes = `${styles.card} ${className}`;\n    return (\n        <div className={classes}>\n            {children}\n        </div>\n    )\n}\n\nexport default Card;","// extracted by mini-css-extract-plugin\nexport default {\"field\":\"text-field_field__q+3UI\",\"label\":\"text-field_label__49yKV\",\"input\":\"text-field_input__8dG8E\"};","import {useMemo} from 'react';\nimport {nanoid} from 'nanoid';\n\nimport styles from './text-field.module.scss';\n\nconst TextField = ({label, handleChange, ...props}) => {\n    const id = useMemo(()=> nanoid(), []);\n\n    return (\n        <div className={styles.field}>\n            <label className={styles.label} htmlFor={id}>{label}</label>\n            <input className={styles.input} id={id} onChange={handleChange} {...props} />\n        </div>\n    );\n}\n\nexport default TextField;"],"names":["name","type","pattern","title","required","label","placeholder","number","ContactForm","onSubmit","contacts","useState","initialState","state","setState","handleChange","target","value","prevState","Card","className","styles","event","preventDefault","filter","contact","toLowerCase","length","alert","TextField","fields","Button","defaultProps","changeFilter","id","onRemoveContact","onClick","elements","map","ContactListItem","PropTypes","isRequired","getAllContacts","items","getError","error","getLoading","loading","getFilteredContacts","normalizedFilter","includes","getFilter","useSelector","filteredContacts","dispatch","useDispatch","useEffect","fetchAllContacts","isItems","noContacts","setFilter","fetchDeleteContact","Boolean","fetchAddContact","disabled","children","classes","props","useMemo","nanoid","htmlFor","onChange"],"sourceRoot":""}